version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: royal-media-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: royal_media
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - royal-media-network

  redis:
    image: redis:7.2-alpine
    container_name: royal-media-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redispassword
    volumes:
      - redis_data:/data
    networks:
      - royal-media-network

  auth-service:
    build:
      context: ./apps/auth
      dockerfile: Dockerfile
    container_name: royal-media-auth
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGODB_URI: mongodb://admin:password@mongodb:27017/royal_media?authSource=admin
      REDIS_URL: redis://:redispassword@redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 7d
      BCRYPT_ROUNDS: 12
    depends_on:
      - mongodb
      - redis
    networks:
      - royal-media-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  posts-service:
    build:
      context: ./apps/posts
      dockerfile: Dockerfile
    container_name: royal-media-posts
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: production
      PORT: 3002
      MONGODB_URI: mongodb://admin:password@mongodb:27017/royal_media?authSource=admin
      REDIS_URL: redis://:redispassword@redis:6379
      AUTH_SERVICE_URL: http://auth-service:3001
    depends_on:
      - mongodb
      - redis
      - auth-service
    networks:
      - royal-media-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  web-app:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: royal-media-web
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_AUTH_SERVICE_URL: http://localhost:3001
      NEXT_PUBLIC_POSTS_SERVICE_URL: http://localhost:3002
      NEXT_PUBLIC_APP_URL: http://localhost:3000
    depends_on:
      - auth-service
      - posts-service
    networks:
      - royal-media-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: royal-media-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web-app
      - auth-service
      - posts-service
    networks:
      - royal-media-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  royal-media-network:
    driver: bridge